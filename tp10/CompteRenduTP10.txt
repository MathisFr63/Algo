FRIZOT Mathis PEREIRA AUGUSTO Bernardo G6
-------------------------------------------------------------------------------------------------------------

tp.h

#include <stdio.h>
#include <string.h>

typedef struct{
	char nom[21];
	char code[6];
	float moy;
}Resultat;

Resultat lireResultat(FILE *fe);
Resultat * chargeTResultat(char *nomfich,int *nbres);
void afficheT(Resultat tRes[],int nbres);
void test(void);
void sauveTResultats(Resultat *tres,int nbres);
Resultat *restaureTresultat(char *nomfich, int nbres);

-------------------------------------------------------------------------------------------------------------

tp.c

#include <stdio.h>
#include "tp.h"
#include <stdlib.h>

/*programme : tp.c
auteur: Mathis FRIZOT Bernardo PEREIRA AUGUSTO
date : 02/12/2016
finalité: Lire un fichier puis sauvegarder les données dans un fichier binaire et enfin lire le fichier bianaire et afficher les données qu'il contient 
*/

/* Nom : 
Finalité : 
Paramètres entrant: Aucun
Paramètres entrant-sortant: Aucun
Valeur retourné: Aucune
Variables : Aucune
*/

/* Nom : lireResultat
Finalité : lit une ligne d'un fichier
Paramètres entrant: Aucun
Paramètres entrant-sortant: fe, fichier contenant le nom de l'élève, le code de la matière et sa moyenne
Valeur retourné: r, un type contenant un nom, un code et une matière
Variables : r, un type contenant un nom, un code et une matière
*/

Resultat lireResultat(FILE *fe){
	Resultat r;
	fscanf(fe,"%s %s %f",r.nom,r.code,&r.moy);
	return r;
}

/* Nom : chargeTresultat
Finalité : Rentre les données lu dans un tableau
Paramètres entrant: Aucun
Paramètres entrant-sortant: nbres, nombres de résultats
nomfich, nom du fichier à lire
Valeur retourné: tableau dynamique contenant les résultats chargés
Variables : i, compteur
*/

Resultat * chargeTResultat(char *nomfich,int *nbres){
	FILE *fe=fopen(nomfich,"r");
	Resultat * tRes;
	int i;

	if(fe==NULL){
		printf("Erreur lors de l'ouverture du ficher %s !\n",nomfich);
		*nbres=-1;
		return;
	}

	fscanf(fe,"%d",nbres);
	tRes=(Resultat *)malloc(*nbres * sizeof(Resultat));
	if (tRes==NULL){
		printf("Problème de Mémoire !\n");
		exit(1);
	}
	for (i=0;i<*nbres;i++){
		tRes[i]=lireResultat(fe);
	}
	fclose(fe);
	return tRes;
}

/* Nom : afficheT
Finalité : affiche un tableau contenant les résultats chargés précédemment
Paramètres entrant: tres, tableau de résultats
nbres, nombres de résultats
Paramètres entrant-sortant: Aucun
Valeur retourné: Aucune
Variables : i, compteur
*/

void afficheT(Resultat tRes[],int nbres){
	int i;

	printf("Nom\tCode\tMoyenne\n");
	for (i=0;i<nbres;i++){
		printf("%s\t%s\t%.1f\n",tRes[i].nom,tRes[i].code,tRes[i].moy);
	}
}

/* Nom : test
Finalité : Appel les différentes fonctions
Paramètres entrant: Aucun
Paramètres entrant-sortant: Aucun
Valeur retourné: Aucune
Variables : nomfich, nom du fichier contenant les résultats
*tres, tableau contenant les résultats chargés
nbres, nombres de résultats
i, compteur
*/

void test(void){
	char nomfich[20];
	Resultat *tRes[10];
	int nbres,i;

	printf("Quel est le nom du fichier dans lequel se trouve vos données ?");
	scanf("%s",nomfich);
	*tRes=chargeTResultat(nomfich,&nbres);
	if (nbres<0){
		return;
	}
	sauveTResultats(*tRes,nbres);
	free(*tRes);
	*tRes=restaureTresultat(nomfich,nbres);
	afficheT(*tRses,nbres);
	free(*tRes);
}

/* Nom : sauveTResultats
Finalité : sauvegarde les données d'un tableau dans un fichier binaire
Paramètres entrant: nbres, nombres de résultats
Paramètres entrant-sortant: tres, tableau contenant les résultats
Valeur retourné: Aucune
Variables : 
fe, fichier binaire
*/

void sauveTResultats(Resultat *tres,int nbres){
	FILE *fe=fopen("save.don","wb");

	fprintf(fe,"%d\n",nbres);
	fwrite(tres,sizeof(Resultat),nbres,fe);
	fclose(fe);
}

/* Nom : restaureTresultat
Finalité : restaure les données contenus dans un fichier binaire
Paramètres entrant: nbres
Paramètres entrant-sortant: nomfich, nom du fichier binaire dans lequel sont contenus les données
Valeur retourné: tres, tableau contenant les résultats
Variables : fe, fichier binaire contenant les données
*tres, tableau contenant les résultats
*/

Resultat *restaureTresultat(char *nomfich, int nbres){
	FILE *fe=fopen("save.don","rb");
	Resultat *tres;

	fscanf(fe,"%d ",&nbres);
	tres=(Resultat *)malloc(nbres * sizeof(Resultat));
	if (tres==NULL){
		printf("Problème de Mémoire !\n");
		fclose(fe);
		exit(1);
	}
	fread(tres,sizeof(Resultat),nbres,fe);
	fclose(fe);
	return tres;
}

-------------------------------------------------------------------------------------------------------------

testtp.c

int main(void){
	ajoutMat();
	return 0; 
}

-------------------------------------------------------------------------------------------------------------

resultats.don

4
Martin algo1 12.5
Amélie maths 15.5
Gilbert based 17.0
Anne organ 10

-------------------------------------------------------------------------------------------------------------

save.don

340a 4d61 7274 696e 0000 20b0 00bc 1f7f
0000 311f 6cdc fd61 6c67 6f31 0000 0000
4841 416d c3a9 6c69 6500 20b0 00bc 1f7f
0000 311f 6cdc fd6d 6174 6873 0000 0000
7841 4769 6c62 6572 7400 20b0 00bc 1f7f
0000 311f 6cdc fd62 6173 6564 0000 0000
8841 416e 6e65 0072 7400 20b0 00bc 1f7f
0000 311f 6cdc fd6f 7267 616e 0000 0000
2041

-------------------------------------------------------------------------------------------------------------