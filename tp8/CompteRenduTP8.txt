FRIZOT Mathis PEREIRA AUGUSTO Bernardo G6

-------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------

EXERCICE 1

-------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------

exo1.h

void extract(void);

-------------------------------------------------------------------------------------------------------------

exo1.c

#include <stdio.h>
#include "exo1.h"
#include <string.h>
#define MATIERE 10

void extract(void){
	FILE *fe=fopen("fnotes.txt","r");
	char mat[MATIERE],codeM[MATIERE],id[MATIERE];
	float note,somme=0,moy;
	int n=0;
	
	if(fe==NULL){
		printf("Erreur lors de l'ouverture du fichier fnotes\n");
		return;
	}

	printf("Tapez le code de la matière à traiter : ");
	scanf("%s",mat);
	printf("Notes données en %s :\n",mat);

	printf("Etudiants\tNotes\n");
	fscanf(fe,"%s%s%f",id,codeM,&note);
	while(feof(fe)==0){
		if(strcmp(codeM,mat)==0){
			printf("%s\t\t%.2f\n",id,note);
			somme+=note;
			n++;
		}
		fscanf(fe,"%s%s%f",id,codeM,&note);
	}
	fclose(fe);
	if(n==0){
		printf("\nAucune note pour cette matière\n");
	}
	else{
		moy=somme/n;
		printf("\nMOYENNE : %.2f\n",moy);
	}
}

-------------------------------------------------------------------------------------------------------------

testexo1.c

int main(void){
	extract();
	return 0; 
}

-------------------------------------------------------------------------------------------------------------

fnotes.txt

duponal maths 15
duponal algo1 14
duranro maths 13
duranro algo2 12.3
duranro maths 11
martige algo1 16

-------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------

EXERCICE 2

-------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------

pendu.h

void initialiser(char mot[],int n);
void placer(char mot1[],char c,char mot2[]);
void globale(void);

-------------------------------------------------------------------------------------------------------------

pendu .c

#include <stdio.h>
#include "pendu.h"
#define TAILLE 27

void initialiser(char mot[],int n){
	int i;

	for(i=0;i<n;i++){
		mot[i]='-';
	}
	mot[i]='\0';
}

void placer(char mot1[],char c,char mot2[]){
	int i;

	for(i=0;mot1[i]!='\0';i++){
		if(mot1[i]==c)
			mot2[i]=c;
	}
}

void globale(void){
	char mot[TAILLE],mot1[TAILLE],c,reconnus,essai[TAILLE];
	int nbL=0,n,etap=0,i;

	printf("Joueur 1, proposez un mot à deviner :\n");
	system("stty -echo");
	scanf("%s",mot1);
	system("stty echo");
	printf("En combien d'étapes voulez-vous jouer ? ");
	scanf("%d",&n);
	while(mot1[nbL]!='\0'){
		nbL++;
	}
	printf("Mot de %d lettre à trouver en %d étapes\n",nbL,n);
	initialiser(mot,nbL);
	while(etap<n){
		printf("Proposez une lettre :");
		scanf("%*c%c",&c);
		placer(mot1,c,mot);
		printf("%s\n",mot);
		printf("Avez-vous reconnus le mot (O/N) ?");
		scanf("%*c%c",&reconnus);
		etap++;
		if(reconnus=='O'){
			printf("Mot ? ");
			scanf("%s",essai);
			if(strcmp(essai,mot1)==0){
				printf("Bravo, vous avez gagné !!!\nMot trouvé en %d étapes\n",etap);
				return;
			}
			else
				printf("Désolé ...\n");
		}
	}
	printf("Votre nombre d'étapes maximum a était dépassé\n");
}

-------------------------------------------------------------------------------------------------------------

testpendu.c

int main(void){
	globale();
	return 0; 
}

-------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------

EXERCICE 3

-------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------

alpha.h

#define COL 15
int chargement(char tabM[][COL]);
void affichage(char tabM[][COL],int nbM);
void insert(char tabM[][COL],int *nbM);
void save(char tabM[][COL],int nbM);
void menu(void);
void mLong(char tabM[][COL],int nbM);

-------------------------------------------------------------------------------------------------------------

alpha.c

#include <stdio.h>
#include "alpha.h"
#include <string.h>
#define LIG 25
#define COL 15

int chargement(char tabM[][COL]){
	FILE *fe=fopen("mot.txt","r");
	int i=0;
	char mot[COL];

	if(fe==NULL){
		printf("Erreur lors de l'ouverture du fichier\n");
		return;
	}
	fgets(mot,COL,fe);
		if(mot[strlen(mot)-1]=='\n')
			mot[strlen(mot)-1]='\0';
	while(feof(fe)==0 && i<COL){
		strcpy(tabM[i],mot);
		i++;
		fgets(mot,COL,fe);
		if(mot[strlen(mot)-1]=='\n')
			mot[strlen(mot)-1]='\0';
	}
	fclose(fe);
	return i;
}

void affichage(char tabM[][COL],int nbM){
	int i;

	for(i=0;i<nbM;i++){
		printf("%s\n",tabM[i]);
	}
}

void insert(char tabM[][COL],int *nbM){
	char ins[COL];
	int i,nb;

	printf("Mot à insérer : ");
	fgets(ins,COL,stdin);
		if(ins[strlen(ins)-1]=='\n')
			ins[strlen(ins)-1]='\0';

	if(*nbM>=LIG-1){
		printf("Le tableau est plein\n");
		return;
	}

	for(i=0;i<*nbM;i++){
		if(strcmp(ins,tabM[i])==0){
			printf("Le mot que vous voulez insérer exite déjà !\n");
			return;
		}
		else if(strcmp(ins,tabM[i])>0){
			for(nb=*nbM;nb>i+1;nb--){
				strcpy(tabM[nb],tabM[nb-1]);
			}
			strcpy(tabM[nb],ins);
			(*nbM)++;
			return;
		}
		else if(i=*nbM-1){
			strcpy(tabM[i],ins);
		}
	}
}

void save(char tabM[][COL],int nbM){
	FILE *fs=fopen("mot.txt","w");
	int i;
	
	for(i=0;i<nbM;i++){
		fprintf(fs,"%s\n",tabM[i]);
	}
	fclose(fs);
}

void menu(void){
	int nbM,choix;
	char tabM[LIG][COL];

	nbM=chargement(tabM);
	printf("\nMenu : \n\n");
	printf("1| Affichage\n");
	printf("2| Insertion\n");
	printf("3| Mot le plus long\n");
	printf("4| Quitter\n");
	scanf("%d",&choix);

	while(choix!=4){
		if(choix==1){
			affichage (tabM,nbM);
		}
		else if(choix==2){
			insert(tabM,&nbM);
		}
		else if(choix==3){
			mLong(tabM,nbM);
		}
		printf("\nMenu : \n\n");
		printf("Choix : ");
		scanf("%d",&choix);
	}
	save(tabM,nbM);
}

void mLong(char tabM[][COL],int nbM){
	char mot[LIG][COL],tCores[LIG][COL];
	int n=0,i;

	printf("Saisir des lettres (max 8)\n");
	scanf("%s",mot);
	if(strlen(*mot)>8){
		printf("Erreur le mot saisi est trop long !\n");
	}

	for(i=0;i<8;i++){
		for(i=0;i<nbM;i++){
		}
	}
}

-------------------------------------------------------------------------------------------------------------

testalpha.c

int main(void){
	menu();
	return 0; 
}

-------------------------------------------------------------------------------------------------------------

mot.txt

baie
baiel
bail
bailler
baillera
baillerai

-------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------
